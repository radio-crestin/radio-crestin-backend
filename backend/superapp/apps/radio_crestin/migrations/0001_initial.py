# Generated by Django 5.1.11 on 2025-07-20 12:15

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='StationGroups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('slug', models.SlugField(verbose_name='Slug')),
                ('name', models.TextField(unique=True, verbose_name='Name')),
                ('order', models.FloatField(default=0, verbose_name='Order')),
            ],
            options={
                'verbose_name': 'Station Group',
                'verbose_name_plural': 'Station Groups',
                'db_table': 'station_groups',
                'ordering': ('order',),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='StationMetadataFetchCategories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('slug', models.TextField(unique=True, verbose_name='Slug')),
            ],
            options={
                'verbose_name': 'Station Metadata Fetch Category',
                'verbose_name_plural': 'Station Metadata Categories',
                'db_table': 'station_metadata_fetch_categories',
                'ordering': ('slug',),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Stations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('disabled', models.BooleanField(default=False, verbose_name='Disabled')),
                ('order', models.FloatField(verbose_name='Order')),
                ('slug', models.SlugField(verbose_name='Slug')),
                ('title', models.TextField(verbose_name='Title')),
                ('website', models.URLField(verbose_name='Website')),
                ('email', models.TextField(blank=True, null=True, verbose_name='Email')),
                ('generate_hls_stream', models.BooleanField(default=True, verbose_name='Generate HLS Stream')),
                ('stream_url', models.URLField(verbose_name='Stream URL')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Thumbnail')),
                ('thumbnail_url', models.URLField(blank=True, null=True, verbose_name='Thumbnail URL')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('description_action_title', models.TextField(blank=True, null=True, verbose_name='Description Action Title')),
                ('description_link', models.URLField(blank=True, null=True, verbose_name='Description Link')),
                ('rss_feed', models.URLField(blank=True, null=True, verbose_name='RSS Feed')),
                ('feature_latest_post', models.BooleanField(blank=True, default=True, null=True, verbose_name='Feature Latest Post')),
                ('facebook_page_id', models.TextField(blank=True, null=True, verbose_name='Facebook Page ID')),
            ],
            options={
                'verbose_name': 'Station',
                'verbose_name_plural': 'Stations',
                'db_table': 'stations',
                'ordering': ('order', 'title'),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Artists',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('name', models.TextField(verbose_name='Name')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Thumbnail')),
                ('thumbnail_url', models.URLField(blank=True, null=True, verbose_name='Thumbnail URL')),
            ],
            options={
                'verbose_name': 'Artist',
                'verbose_name_plural': 'Artists',
                'db_table': 'artists',
                'ordering': ('name',),
                'managed': True,
                'unique_together': {('name',)},
            },
        ),
        migrations.CreateModel(
            name='Songs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('name', models.TextField(verbose_name='Name')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Thumbnail')),
                ('thumbnail_url', models.URLField(blank=True, null=True, verbose_name='Thumbnail URL')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='radio_crestin.artists', verbose_name='Artist')),
            ],
            options={
                'verbose_name': 'Song',
                'verbose_name_plural': 'Songs',
                'db_table': 'songs',
                'ordering': ('artist', 'name'),
                'managed': True,
                'unique_together': {('name', 'artist')},
            },
        ),
        migrations.CreateModel(
            name='Posts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('title', models.TextField(verbose_name='Title')),
                ('link', models.TextField(verbose_name='Link')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('published', models.DateTimeField(verbose_name='Published')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='radio_crestin.stations', verbose_name='Station')),
            ],
            options={
                'verbose_name': 'Post',
                'verbose_name_plural': 'Posts',
                'db_table': 'posts',
                'ordering': ('-published',),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='StationsMetadataFetch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('order', models.IntegerField(verbose_name='Order')),
                ('url', models.TextField(verbose_name='URL')),
                ('station', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='radio_crestin.stations', verbose_name='Station')),
                ('station_metadata_fetch_category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='radio_crestin.stationmetadatafetchcategories', verbose_name='Category')),
            ],
            options={
                'verbose_name': 'Station Metadata Fetch',
                'verbose_name_plural': 'Station Metadata Fetches',
                'db_table': 'stations_metadata_fetch',
                'ordering': ('station',),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='StationsNowPlaying',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('timestamp', models.DateTimeField(verbose_name='Timestamp')),
                ('raw_data', models.JSONField(verbose_name='Raw Data')),
                ('error', models.JSONField(blank=True, null=True, verbose_name='Error')),
                ('listeners', models.IntegerField(blank=True, null=True, verbose_name='Listeners')),
                ('song', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='radio_crestin.songs', verbose_name='Song')),
                ('station', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='radio_crestin.stations', verbose_name='Station')),
            ],
            options={
                'verbose_name': 'Station Now Playing',
                'verbose_name_plural': 'Station Now Playing',
                'db_table': 'stations_now_playing',
                'ordering': ('-timestamp',),
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='stations',
            name='latest_station_now_playing',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='radio_crestin.stationsnowplaying', verbose_name='Latest Now Playing'),
        ),
        migrations.CreateModel(
            name='StationsUptime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('timestamp', models.DateTimeField(verbose_name='Timestamp')),
                ('is_up', models.BooleanField(verbose_name='Is Up')),
                ('latency_ms', models.IntegerField(verbose_name='Latency (ms)')),
                ('raw_data', models.JSONField(verbose_name='Raw Data')),
                ('station', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='radio_crestin.stations', verbose_name='Station')),
            ],
            options={
                'verbose_name': 'Station Uptime',
                'verbose_name_plural': 'Station Uptime',
                'db_table': 'stations_uptime',
                'ordering': ('-timestamp',),
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='stations',
            name='latest_station_uptime',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='radio_crestin.stationsuptime', verbose_name='Latest Station Uptime'),
        ),
        migrations.CreateModel(
            name='StationToStationGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('order', models.FloatField(blank=True, default=0, null=True, verbose_name='Order')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='radio_crestin.stationgroups', verbose_name='Group')),
                ('station', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='radio_crestin.stations', verbose_name='Station')),
            ],
            options={
                'verbose_name': 'Station to Group Relationship',
                'verbose_name_plural': 'Station to Group Relationships',
                'db_table': 'station_to_station_group',
                'ordering': ('group',),
                'managed': True,
                'unique_together': {('station', 'group')},
            },
        ),
        migrations.AddField(
            model_name='stations',
            name='groups',
            field=models.ManyToManyField(related_name='stations', through='radio_crestin.StationToStationGroup', to='radio_crestin.stationgroups', verbose_name='Groups'),
        ),
        migrations.CreateModel(
            name='StationStreams',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('stream_url', models.TextField(verbose_name='Stream URL')),
                ('order', models.FloatField(blank=True, default=0, null=True, verbose_name='Order')),
                ('type', models.TextField(choices=[('HLS', 'HLS'), ('proxied_stream', 'Proxied Stream'), ('direct_stream', 'Direct Stream')], verbose_name='Type')),
                ('station', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='radio_crestin.stations', verbose_name='Station')),
            ],
            options={
                'verbose_name': 'Station Stream',
                'verbose_name_plural': 'Station Streams',
                'db_table': 'station_streams',
                'ordering': ('station', 'order'),
                'managed': True,
                'unique_together': {('station', 'stream_url')},
            },
        ),
    ]
