worker_processes  5;  ## Default: 1
worker_rlimit_nofile 8192;
error_log  /dev/stdout warn;
pid /tmp/nginx;

load_module modules/ngx_http_brotli_filter_module.so;
load_module modules/ngx_http_brotli_static_module.so;

events {
  worker_connections  4096;  ## Default: 1024
}

http {
  # Basic log format for non-analytics requests
  log_format   main '$remote_addr - $remote_user [$time_local]  $status '
    '"$request" $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

  # Log format for TS sessions with session ID tracking
  log_format ts_session '$arg_s [$time_local] "$request" $bytes_sent';

  # Use main log for general access
  access_log   /var/log/nginx/access.log  main;

  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 2048;

  include /etc/nginx/mime.types;

  # Compression
  gzip on;
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript application/vnd.apple.mpegurl video/mp2t video/mp4;
  gzip_vary on;

  brotli on;
  brotli_comp_level 6;
  brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript application/vnd.apple.mpegurl video/mp2t video/mp4;


  server {
    listen 80;
    server_name default_server;
    server_tokens off;

    location = / {
      add_header Content-Type text/plain;
      return 200 'It works!';
    }

    location /hls/ {
      add_header Access-Control-Allow-Origin *;
      autoindex on;
      root /tmp/data/;

      client_body_temp_path /tmp/client_temp;

      # M3U8 playlist handling with URL rewriting
      location ~ \.m3u8$ {
        # Redirect to URL with session parameter if not present
        if ($arg_s = "") {
            return 302 $scheme://$http_host$request_uri?s=$request_id;
        }
        
        set $session_param "?s=$arg_s";
        
        sub_filter_types application/vnd.apple.mpegurl;
        sub_filter '.ts' '.ts${session_param}';
        sub_filter_once off;

        add_header Cache-Control "no-cache";
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
        add_header Access-Control-Allow-Headers "Range, Content-Range, Content-Length";
        add_header Access-Control-Expose-Headers "Content-Range, Content-Length";
      }

      # TS segment files with session logging
      location ~ \.ts$ {
        set $session_id $arg_s;
        access_log /var/log/nginx/ts_sessions.log ts_session;

        add_header Cache-Control "public, max-age=10800";
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
        add_header Access-Control-Allow-Headers "Range, Content-Range, Content-Length";
        add_header Access-Control-Expose-Headers "Content-Range, Content-Length";
      }
    }

    # Health check endpoint
    location /health {
      add_header Content-Type text/plain;
      return 200 'healthy';
    }

    # Analytics endpoint for monitoring script
    location /analytics {
      add_header Content-Type application/json;
      return 200 '{"status":"analytics_endpoint","ts_session_log":"/var/log/nginx/ts_sessions.log"}';
    }
  }
}
