worker_processes  5;  ## Default: 1
error_log  /dev/stdout debug;
worker_rlimit_nofile 8192;

events {
  worker_connections  4096;  ## Default: 1024
}

http {
  default_type application/octet-stream;
  log_format   main '$remote_addr - $remote_user [$time_local]  $status '
    '"$request" $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';
  access_log   /dev/stdout  main;
  sendfile     on;
  tcp_nopush   on;
  server_names_hash_bucket_size 128; # this seems to be required for some vhosts
  proxy_cache_path  /tmp/nginx-cache  levels=1:2    keys_zone=STATIC:10m inactive=24h  max_size=1g;

    upstream host_service {
       server host.docker.internal:8432;
    }

   server {
        listen 80;
        server_name _;
        include       common.conf;
        location / {
            include     common_location.conf;
            include     common_caching.conf;
            proxy_pass http://frontend:8080;
        }
  }

   server {
        listen 80;
        server_name admin.localhost;
        include       common.conf;
        location / {
            include     common_location.conf;
            proxy_pass http://admin:8080/;
        }
  }

   server {
        listen 80;
        server_name graphql.localhost;
        include       common.conf;
        location / {
            include     common_location.conf;
            include     common_caching.conf;
            proxy_pass http://graphql-engine:8080;
        }
  }

   server {
        listen 80;
        server_name graphql-viewer.localhost;
        include       common.conf;
        location / {
            include     common_location.conf;
            include     common_caching.conf;
            proxy_pass http://graphql-viewer:8080;
        }
  }


   server {
        listen 80;
        server_name radio.localhost;
        server_tokens off;

        rewrite /http\:/(.*)$ /$1 last;
        rewrite /https\:/(.*)$ /$1 last;
        location = /favicon.ico {
            return 404;
        }
        location = / {
            add_header Content-Type text/plain;
            return 200 'it works!';
        }
        location ~ /https/(.*)$ {
            resolver 1.1.1.1 ipv6=off;
            add_header Access-Control-Allow-Origin *;
            proxy_pass https://$1;
            proxy_set_header    X-Real-IP           $remote_addr;
            proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
            proxy_buffering off;
        }
        location ~ /(.*)$ {
            resolver 1.1.1.1 ipv6=off;
            add_header Access-Control-Allow-Origin *;
            proxy_pass http://$1;
            proxy_set_header    X-Real-IP           $remote_addr;
            proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
            proxy_buffering off;
        }
  }
}

