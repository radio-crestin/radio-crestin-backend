worker_processes  5;
worker_rlimit_nofile 8192;
error_log  /dev/stdout warn;
pid /tmp/nginx;

load_module modules/ngx_http_brotli_filter_module.so;
load_module modules/ngx_http_brotli_static_module.so;

events {
  worker_connections  4096;
}

http {
  # Anonymous session ID mapping - uses existing cookie or generates new request_id
  map $cookie_anonymous_session_id $anonymous_session_id {
      default $request_id;
      ~.+ $cookie_anonymous_session_id;
  }

  # Enhanced log format for analytics with session tracking
  log_format session_log '$remote_addr - $remote_user [$time_local] '
                         '"$request" $status $body_bytes_sent '
                         '"$http_referer" "$http_user_agent" '
                         'anonymous_session_id="$anonymous_session_id" '
                         'station="$station_slug" '
                         'request_time=$request_time '
                         'upstream_response_time=$upstream_response_time';
  
  # Basic log format for non-analytics requests
  log_format   main '$remote_addr - $remote_user [$time_local]  $status '
    '"$request" $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';
  
  # Use session log for analytics, main log for general access
  access_log   /var/log/nginx/session_access.log  session_log;
  access_log   /var/log/nginx/access.log  main;

  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 2048;

  include /etc/nginx/mime.types;

  # Compression
  gzip on;
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript application/vnd.apple.mpegurl video/mp2t video/mp4;
  gzip_vary on;

  brotli on;
  brotli_comp_level 6;
  brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript application/vnd.apple.mpegurl video/mp2t video/mp4;

  # Extract station slug from request URI for analytics
  map $request_uri $station_slug {
      ~^/hls/([^/]+)/ $1;
      default "unknown";
  }

  server {
    listen 80;
    server_name default_server;
    server_tokens off;

    location = / {
      add_header Content-Type text/plain;
      return 200 'HLS Streaming Service - Backend Integration';
    }

    location /hls/ {
      add_header Access-Control-Allow-Origin *;
      autoindex on;
      root /tmp/data/;

      client_body_temp_path /tmp/client_temp;

      # Set anonymous session ID cookie if it doesn't exist
      if ($cookie_anonymous_session_id = "") {
          add_header Set-Cookie "anonymous_session_id=$request_id; Path=/; Max-Age=86400; HttpOnly; SameSite=Lax";
      }

      # Cache control and analytics for index.m3u8 playlists
      location ~* \.m3u8$ {
        add_header Cache-Control "no-cache";
        add_header Access-Control-Allow-Origin *;
        
        # Set session cookie if not present
        if ($cookie_anonymous_session_id = "") {
            add_header Set-Cookie "anonymous_session_id=$request_id; Path=/; Max-Age=86400; HttpOnly; SameSite=Lax";
        }
        
        # Add CORS headers for HLS streaming
        add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
        add_header Access-Control-Allow-Headers "Range, Content-Range, Content-Length";
        add_header Access-Control-Expose-Headers "Content-Range, Content-Length";
      }

      # Cache control and analytics for .ts segment files
      location ~* \.ts$ {
        add_header Cache-Control "public, max-age=10800";
        add_header Access-Control-Allow-Origin *;
        
        # Set session cookie if not present
        if ($cookie_anonymous_session_id = "") {
            add_header Set-Cookie "anonymous_session_id=$request_id; Path=/; Max-Age=86400; HttpOnly; SameSite=Lax";
        }
        
        # Add CORS headers for HLS streaming
        add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
        add_header Access-Control-Allow-Headers "Range, Content-Range, Content-Length";
        add_header Access-Control-Expose-Headers "Content-Range, Content-Length";
      }
    }

    # Health check endpoint
    location /health {
      add_header Content-Type text/plain;
      return 200 'healthy';
    }

    # Analytics endpoint for monitoring script
    location /analytics {
      add_header Content-Type application/json;
      return 200 '{"status":"analytics_endpoint","session_log":"/var/log/nginx/session_access.log"}';
    }
  }
}