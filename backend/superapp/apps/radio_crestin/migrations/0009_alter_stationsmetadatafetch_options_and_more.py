# Generated by Django 5.1.11 on 2025-07-21 14:32

import regex_field.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('radio_crestin', '0008_remove_stationsmetadatafetch_order_and_more'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='stationsmetadatafetch',
            options={'managed': True, 'ordering': ('station', '-priority'), 'verbose_name': 'Station Metadata Fetch', 'verbose_name_plural': 'Station Metadata Fetches'},
        ),
        migrations.AddField(
            model_name='artists',
            name='dirty_metadata',
            field=models.BooleanField(default=False, help_text='Created from automatic metadata scraping (eligible for cleanup)', verbose_name='Dirty Metadata'),
        ),
        migrations.AddField(
            model_name='songs',
            name='dirty_metadata',
            field=models.BooleanField(default=False, help_text='Created from automatic metadata scraping (eligible for cleanup)', verbose_name='Dirty Metadata'),
        ),
        migrations.AddField(
            model_name='stationsmetadatafetch',
            name='dirty_metadata',
            field=models.BooleanField(default=True, help_text='Mark songs/artists created from this source as dirty metadata (auto-cleanup eligible)', verbose_name='Dirty Metadata'),
        ),
        migrations.AlterField(
            model_name='stationsmetadatafetch',
            name='artist_regex',
            field=regex_field.fields.RegexField(blank=True, help_text='Regex pattern to extract artist (optional)', null=True, verbose_name='Artist Regex'),
        ),
        migrations.AlterField(
            model_name='stationsmetadatafetch',
            name='station_name_regex',
            field=regex_field.fields.RegexField(blank=True, help_text='Regex pattern to remove station name from title (optional)', null=True, verbose_name='Station Name Regex'),
        ),
        migrations.AlterField(
            model_name='stationsmetadatafetch',
            name='title_regex',
            field=regex_field.fields.RegexField(blank=True, help_text='Regex pattern to extract title (optional)', null=True, verbose_name='Title Regex'),
        ),
    ]
